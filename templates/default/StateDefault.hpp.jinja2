/**
 * @file {{state.name}}_State.hpp
 * @date {{date}}
 * @brief It is an auto-generated file.
 * It example of template for CommonAPI Client.
 * This class is not ready for production use.
 * See project ICC: https://github.com/redradist/Inter-Component-Communication.git where it is more mature
 * @copyright Denis Kotov, MIT License. Open source: https://github.com/redradist/Inter-Component-Communication.git
 */

#ifndef _{{state.name.upper()}}_HPP_
#define _{{state.name.upper()}}_HPP_

#include <memory>
#include <fsm/IState.hpp>

class {{state.name}}_State : public IState {
 public:
  static
  std::shared_ptr<IState> buildState(std::weak_ptr<IState> _parent = std::weak_ptr<IState>()) {
    return std::make_shared<{{state.name}}_State>(_parent);
  }
  ~{{state.name}}_State();

  {% if state.comment is not none -%}
  std::string getStateName() const override;
  {% endif -%}

  bool handleEvent(const IEvent & _ev) override;

  void entryFrom(std::shared_ptr<IState> _from,
                 const IEvent &_ev) override;

  void exitTo(std::shared_ptr<IState> _to,
              const IEvent &_ev) override;

 protected:
  {{state.name}}_State(std::weak_ptr<IState> _parent);
};

#endif  // _{{state.name.upper()}}_HPP_
